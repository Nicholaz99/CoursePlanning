<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>